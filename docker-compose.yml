services:
  rent-car-service:
    build: .
    container_name: rent-car-service
    ports:
      - "7950:7950"
    # MySQL 컨테이너가 먼저 준비된 후에 이 서비스가 시작되도록 의존성을 추가합니다.
    depends_on:
      - rent-car-mysql
    environment:
      # MySQL 연결 정보를 환경변수로 설정
      # .env 파일에 정의된 변수들을 참조합니다.
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      # JWT, Mail, Admin 이메일 등 .env에 추가한 다른 변수들도 여기에 추가할 수 있습니다.
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      # 활성 프로파일은 여기에 직접 지정하거나 .env 파일로 옮길 수 있습니다.
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
    networks:
      - pinpoint_network

  rent-car-mysql:
    image: mysql:8.0
    container_name: rent-car-mysql
    ports:
      - "3307:3306"  # 포트 변경: 3306 -> 3307
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "wookdb"
      # application.yml의 username/password와 일치하도록 환경 변수를 추가합니다.
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      # MySQL 데이터 영속성을 위한 볼륨 마운트 (선택사항)
      - mysql_data:/var/lib/mysql
    networks:
      - pinpoint_network

  # nginx 서비스 추가
  rent-car-nginx:
    image: nginx:latest
    container_name: rent-car-nginx
    ports:
      - "80:80"    # 기본 HTTP 포트
      - "8081:80"  # 기존 설정과의 호환성을 위한 추가 포트
    volumes:
      # Docker용 nginx 설정 파일을 컨테이너로 마운트
      - ./nginx-docker.conf:/etc/nginx/nginx.conf:ro
      # 로그 디렉토리 마운트 (선택사항)
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - rent-car-service
    networks:
      - pinpoint_network
    # nginx 헬스체크 설정
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # phpMyAdmin 서비스 추가 (웹 기반 MySQL 관리도구)
  rent-car-phpmyadmin:
    image: phpmyadmin:latest
    container_name: rent-car-phpmyadmin
    ports:
      - "8080:80"  # http://localhost:8080으로 접속
    environment:
      - PMA_HOST=rent-car-mysql
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
    depends_on:
      - rent-car-mysql
    networks:
      - pinpoint_network


volumes:
  # MySQL 데이터 영속성을 위한 볼륨 정의
  mysql_data:

networks:
  pinpoint_network:
    external: true
    name: pinpoint-docker_pinpoint
