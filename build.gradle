plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'me.changwook'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:juni t-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation "org.springframework.boot:spring-boot-starter-security"
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //타임리프 의존성 추가
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    runtimeOnly 'com.h2database:h2'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly('org.springframework.boot:spring-boot-devtools')
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'
    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //매핑 라이브러리 설정
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
}

// Java 컴파일 옵션에 Annotation Processor 경로 설정 (Lombok + MapStruct)
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file("${buildDir}/generated/sources/annotationProcessor/java/main"))
    // Lombok과 MapStruct 프로세서 모두 활성화
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring' // MapStruct 구현체를 Spring Bean으로 생성
    ]
}

// IntelliJ IDEA 사용 시 generated source 인식 위한 설정 (선택적이지만 권장)
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated/sources/annotationProcessor/java/main"]
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')
}
