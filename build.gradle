plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'me.changwook'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // testCompileOnly도 annotationProcessor를 확장하도록 추가 (Lombok 때문)
    testCompileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    runtimeOnly 'com.h2database:h2'



    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Jackson
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Lombok + MapStruct Binding
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.withType(JavaCompile).configureEach { // configureEach 사용 권장
    options.encoding = 'UTF-8' // 인코딩 설정 추가

    // JavaCompile 작업에만 MapStruct 옵션 적용
    if (name == "compileJava") {
        options.compilerArgs += [
                '-Amapstruct.defaultComponentModel=spring'
        ]
    }

}

// IntelliJ IDEA 및 다른 IDE에서 생성된 소스를 인식하도록 설정
sourceSets {
    main {
        java {
            srcDirs += file("${buildDir}/generated/sources/annotationProcessor/java/main")
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
