security:
  login:
    max-attempts: 5
    lockout-duration-minutes: 15

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  application:
    name: WookApp
  mail:
    host: smtp.naver.com
    port: 587
    username: ${Spring_Mail_UserName}
    password: ${Spring_Mail_Password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.naver.com
            protocols: TLSv1.2
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: false
        default_batch_fetch_size: 100
    database-platform: org.hibernate.dialect.MySQLDialect
  messages:
    basename: messages_ko
    encoding: UTF-8
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus"
  endpoint:
    health:
      show-details: always
  health:
    mail:
      enabled: false

admin:
  notification:
    email: ${Admin_Email}

server:
  port: 7950

jwt:
  secret: ${JWT_SECRET_KEY}
  expire: 3600000 #1시간
  refresh-expire: 36000000 #10시간

# --- 통합 파일 서빙 설정 ---
file:
  upload:
    dir: ${user.home}/uploads/images
    chat-dir: ${user.home}/chat_files
  resources:
    handler: /media/**
    locations: ${user.home}/chat_files/
  static-serving:
    enabled: true
    cache-duration: 3600

---
spring:
  config:
    activate:
      on-profile: local
  port: 7950
  forward-headers-strategy: native
  servlet:
    context-path: /
  datasource:
    url: jdbc:mysql://rent-car-mysql:3306/wookdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update  # 테이블 자동 생성/업데이트 활성화
    properties:
      hibernate:
        default_batch_fetch_size: 1000
        format_sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    me.changwook: DEBUG

jwt:  # (v) 중복: test 프로파일과 기본 설정에 동일 설정
  secret: ${Jwt_Secret:d9f82kd9fkdw92kfslaj2k39fkdslqwe}
  expire: 10000 #10초
  refresh-expire: 86400000 #1일

messages:  # (v) 중복: 기본 프로파일과 local 프로파일에 동일 설정
  basename: messages_ko
  encoding: UTF-8

file:  # (v) 중복: 기본 프로파일과 동일 설정 반복
  upload:
    dir: ${user.home}/uploads/images
    chat-dir: ${user.home}/chat_files  # 채팅 파일 업로드용
  resources:
    handler: /media/**
    locations: ${user.home}/chat_files/

---
spring:
  config:
    activate:
      on-profile: local2
  port: 7950
  forward-headers-strategy: native
  servlet:
    context-path: /
  datasource:
    url: jdbc:mysql://localhost:3306/wookdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${MYSQL_USERNAME:wook}
    password: ${MYSQL_PASSWORD:wookpw}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update  # 테이블 자동 생성/업데이트 활성화
    properties:
      hibernate:
        default_batch_fetch_size: 1000
        format_sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    me.changwook: DEBUG

jwt:
  secret: ${Jwt_Secret:d9f82kd9fkdw92kfslaj2k39fkdslqwe}
  expire: 10000 #10초
  refresh-expire: 86400000 #1일

messages:
  basename: messages_ko
  encoding: UTF-8

file:
  upload:
    dir: ${user.home}/uploads/images
    chat-dir: ${user.home}/chat_files
  resources:
    handler: /media/**
    locations: ${user.home}/chat_files/

