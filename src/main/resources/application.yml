spring:
  application:
    name: WookApp  # Pinpoint APM에서 사용할 애플리케이션 이름
  mail:
    host: smtp.naver.com
    port: 587
    username: ${Spring_Mail_UserName:}
    password: ${Spring_Mail_Password:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.naver.com
            protocols: TLSv1.2

# Actuator Health Check 설정 (Pinpoint APM 호환성 향상)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,pinpoint  # Pinpoint 엔드포인트 노출
  endpoint:
    health:
      show-details: always
  health:
    mail:
      enabled: false  # Mail Health Indicator 비활성화
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: false
        default_batch_fetch_size: 1000
    database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console:
      settings:
        web-allow-others: false
      enabled: true
  messages:
    basename: messages_ko
    encoding: UTF-8
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

security:
  login:
    max-attempts: 5
    lockout-duration-minutes: 15
admin:
  notification:
    email: ${Admin_Email:}
server:
  port: 7950
jwt:
  secret: ${Jwt_Secret:d9f82kd9fkdw92kfslaj2k39fkdslqwe}
  expire: 3600000

# 통합 파일 서빙 설정 (API + 정적 리소스)
file:
  upload:
    dir: ${user.home}/uploads/images
  upload-dir: ${user.home}/chat_files  # 채팅 파일 업로드용
  resources:
    handler: /media/**
    locations: ${user.home}/chat_files/
  # API 기반 스트리밍: /api/files/view/{imageId} (인증 필요, MIME 타입 정규화)
  # 정적 리소스 매핑: /images/** (빠른 접근, 브라우저 캐싱)
  static-serving:
    enabled: true           # 정적 리소스 서빙 활성화
    cache-duration: 3600    # 캐시 지속시간 (초)

---

spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:wookdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    sql: debug

jwt:
  secret: ${d9f82kd9fkdw92kfslaj2k39fkdslqwe}
  expire: 3600000

---

spring:
  config:
    activate:
      on-profile: local
  port: 7950
  forward-headers-strategy: native
  servlet:
    context-path: /
  datasource:
    url: jdbc:mysql://localhost:3306/wookdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${MYSQL_USERNAME:wook}
    password: ${MYSQL_PASSWORD:wookpw}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update  # 테이블 자동 생성/업데이트 활성화
    properties:
      hibernate:
        default_batch_fetch_size: 1000
        format_sql: true
    database-platform: org.hibernate.dialect.MySQLDialect

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    me.changwook: DEBUG

jwt:
  secret: ${Jwt_Secret:d9f82kd9fkdw92kfslaj2k39fkdslqwe}
  expire: 3600000

messages:
  basename: messages_ko
  encoding: UTF-8

file:
  upload:
    dir: ${user.home}/uploads/images
  upload-dir: ${user.home}/chat_files  # 채팅 파일 업로드용
  resources:
    handler: /media/**
    locations: ${user.home}/chat_files/