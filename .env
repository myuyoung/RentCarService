# .env

# ===============================================
# Spring Boot Datasource (MySQL)
# ===============================================
# application.yml의 ${SPRING_DATASOURCE_URL}에 주입됩니다.
# Docker Compose 네트워크 내부에서는 서비스 이름(rent-car-mysql)을 호스트명으로 사용합니다.
SPRING_DATASOURCE_URL=jdbc:mysql://rent-car-mysql:3306/wookdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8

# application.yml의 ${MYSQL_USERNAME:wook}에 주입됩니다.
MYSQL_USERNAME=wook

# application.yml의 ${MYSQL_PASSWORD:wookpw}에 주입됩니다.
MYSQL_PASSWORD=wookpw

# ===============================================
# JWT (JSON Web Token)
# ===============================================
# application.yml의 ${Jwt_Secret:...}에 주입됩니다.
# !!주의: 실제 프로덕션 환경에서는 훨씬 더 복잡하고 긴 시크릿 키를 사용해야 합니다.
JWT_SECRET_KEY=d9f82kd9fkdw92kfslaj2k39fkdslqwe

# ===============================================
# Spring Mail (Naver SMTP)
# ===============================================
# application.yml의 ${Spring_Mail_UserName:}에 주입됩니다.
SPRING_MAIL_USERNAME=jjjonga33@naver.com

# application.yml의 ${Spring_Mail_Password:}에 주입됩니다.
SPRING_MAIL_PASSWORD=DSMC5X7KPBMT

# ===============================================
# Admin Notification
# ===============================================
# application.yml의 ${Admin_Email:}에 주입됩니다.
ADMIN_EMAIL=jjjonga33@naver.com