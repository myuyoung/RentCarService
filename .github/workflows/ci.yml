# .github/workflows/ci.yml

name: RentCarService CI/CD with AWS CodeDeploy

on:
  push:
    branches: ["main"]

env:
  # 변수 설정
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: rentcar-service-deploy-bucket-myuyoung # Phase 1에서 만든 S3 버킷 이름
  CODE_DEPLOY_APP_NAME: RentCarService-App # Phase 2에서 만든 CodeDeploy 애플리케이션 이름
  CODE_DEPLOY_GROUP_NAME: RentCarService-Deployment-Group # Phase 2에서 만든 배포 그룹 이름

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

#      - name: Build with Gradle
#        run: ./gradlew build
#        env:
#          Spring_Mail_UserName: ${{ secrets.Spring_Mail_UserName }}
#          Spring_Mail_Password: ${{ secrets.Spring_Mail_Password }}
#          Jwt_Secret: ${{ secrets.Jwt_Secret }}
#          Admin_Email: ${{ secrets.Admin_Email }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 배포 패키지 디렉터리 생성
      - name: Make Directory for deploy package
        run: mkdir -p deploy

      # 빌드된 JAR, appspec.yml, scripts를 deploy 디렉터리로 복사
      - name: Copy deployment files
        run: |
          cp build/libs/*.jar deploy/
          cp appspec.yml deploy/
          cp -r scripts deploy/

      # deploy 디렉터리를 zip으로 압축
      - name: Make zip file
        run: |
          cd deploy
          zip -r -qq ../rentcar-deploy.zip .
          cd ..

      # 생성된 zip 파일을 아티팩트로 업로드
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-package
          path: ./rentcar-deploy.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # build job에서 업로드한 아티팩트 다운로드
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy-package

      # AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Load secrets from AWS Secrets Manager
        uses: aws-actions/aws-secrets-manager-github-actions@v1
        with:
         secret-name: 'my-app/secrets'

      # S3에 배포 패키지 업로드
      - name: Upload to S3
        run: aws s3 cp ./rentcar-deploy.zip s3://${{ env.S3_BUCKET_NAME }}/

      # AWS CodeDeploy를 통해 배포 실행
      - name: Deploy to EC2
        run: aws deploy create-deployment --application-name ${{ env.CODE_DEPLOY_APP_NAME }} --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=rentcar-deploy.zip